buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
    }
}

group 'pl.wiciu'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
//apply plugin: 'war'

sourceCompatibility = 1.8

mainClassName = "pl.wiciu.FileManagerApp"

jar {
    baseName = 'file-manager'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}


startScripts {
    classpath += files('src/dist/conf','src/main/resources/conf','src/dist/lib/external')
}

applicationDistribution.from("src/main/resources/conf") {
    into "conf"
}


def isDevelopmentEnv() {
    def env = System.properties['spring.profiles.active'] ?: 'DEV'
    env == 'DEV'
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.13'
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]

    compile project(':library')
    compile project(':jpa-repositories')

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("commons-io:commons-io:2.6")
    compile("com.h2database:h2")
    compile 'org.xeustechnologies:jcl-core:2.8'
    compile 'org.xeustechnologies:jcl-spring:2.8'
  //  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile "org.assertj:assertj-core:1.2.0"
}

/*
startScripts {
    classpath += files('src/dist/conf','src/main/resources/conf')
}
applicationDistribution.from("src/main/resources/conf") {
    into "lib/conf"
}*/